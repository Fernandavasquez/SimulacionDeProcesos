/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import classes.*;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Fernanda
 */
public class frmMain extends javax.swing.JFrame {

    //
    DefaultTableModel tabla = new DefaultTableModel();
    DefaultTableModel tablaCPU = new DefaultTableModel();
    Reloj horaActual = new Reloj(); // hilo que muestra la hora del sistema
    RR roundrobin = new RR();
    Proceso[] atributosProceso;
    //variables insertar reloj
    //Fernanda
    
    String Proceso;
    private String TC;
    private String TL;
    public Integer contador = 0;
    //procesos automaticos

    /**
     * ************************ Variables Claudia ****************************
     */
    //ArrayList<Proceso> listaProcesos = new ArrayList();
    //int nuevaPosici√≥n=0;
    Integer proc = 0;
    int np = 0;
    int sumaT = 0;

    /**
     * Creates new form frmMain
     */
    public frmMain() {
        initComponents();
        this.setLocationRelativeTo(null);
        cargarProceso();
        cargardatos();
        horaActual.start();
    }

    public void limpiarReloj() {
        //txtProceso.setText("");     
        txtTL.setText("");
        txtTC.setText("");
    }

    public void cargarProceso() {
        txtProceso.setText("P" + (contador));
    }

    public void cargardatos() {
        String[] titulo = new String[]{"PC", "TL", "TC"};
        tabla.setColumnIdentifiers(titulo);
        jTable1.setModel(tabla);
        
        String[] heders = new String[]{"ID", "Estado", "HoraLlegada", "HoraFinal"};
        tablaCPU.setColumnIdentifiers(heders);
        jTable2.setModel(tablaCPU);
    }

    public void Insertar() {
        Proceso = txtProceso.getText();
        TL = txtTL.getText();
        TC = txtTC.getText();
        contador++;
        txtProceso.setText("P" + (contador));
    }

    /**
     * ************ Claudia ******************
     */
    public String[] listProcesos() {
        int fila = tabla.getRowCount();
        String[] lista = new String[tabla.getRowCount()];
        for (int c = 0; c < fila; c++) {

            lista[c] = tabla.getValueAt(c, 0).toString();
        }
        
        return lista;
    }

    public Integer[] listTL() {
        int fila = tabla.getRowCount();
        Integer[] lista = new Integer[tabla.getRowCount()];
        for (int c = 0; c < fila; c++) {

            lista[c] = Integer.parseInt(tabla.getValueAt(c, 1).toString());
        }
        return lista;
    }

    public Integer[] listarTC() {
        int fila = tabla.getRowCount();
        Integer[] lista = new Integer[tabla.getRowCount()];
        for (int c = 0; c < fila; c++) {
            lista[c] = Integer.parseInt(tabla.getValueAt(c, 2).toString());
        }
        return lista;
    }

    public void listTC() {
        int fila = tabla.getRowCount();
        int suma = 0;
        for (int c = 0; c < fila; c++) {
            int valores = Integer.parseInt(tabla.getValueAt(c, 2).toString());
            sumaT = sumaT + valores;
        }
        System.out.println(sumaT);
    }

    public void Error() {
        String ms1 = "<html><p style = \"color:white; font:15px; \">  MEMORIA LLENA </p></html>";
        JOptionPane.showMessageDialog(null, ms1, " ", JOptionPane.ERROR_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTC = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtProceso = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTL = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLHoraInicial = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLPlanificador = new javax.swing.JLabel();
        jLContadorPrograma = new javax.swing.JLabel();
        jLimite = new javax.swing.JLabel();
        jLBase = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Iniciar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Insertar datos");

        jLabel3.setText("Proceso");

        txtProceso.setEditable(false);

        jLabel4.setText("TL");

        jButton2.setText("Insertar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("TC");

        jLabel1.setText("Simulacion de Procesos");

        jLHoraInicial.setText("Hora inicial del sistema: ");

        jLabel7.setText("jLabel7");

        jLabel8.setText("Memoria");

        jLabel9.setBackground(new java.awt.Color(153, 153, 255));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Sistema Operativo");
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel9.setPreferredSize(new java.awt.Dimension(100, 18));

        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel11.setText("0x000h");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel12.setText("0x82Fh");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel13.setText("0xFFFh");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setText("PLANIFICADOR");

        jLabel16.setText("Contador de programa");

        jLabel17.setText("Limite:");

        jLabel18.setText("Base:");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLPlanificador.setBackground(new java.awt.Color(153, 153, 153));
        jLPlanificador.setForeground(new java.awt.Color(0, 0, 0));
        jLPlanificador.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLPlanificador.setText("P0");
        jLPlanificador.setOpaque(true);

        jLContadorPrograma.setBackground(new java.awt.Color(153, 153, 153));
        jLContadorPrograma.setForeground(new java.awt.Color(0, 0, 0));
        jLContadorPrograma.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLContadorPrograma.setText("0");
        jLContadorPrograma.setOpaque(true);

        jLimite.setBackground(new java.awt.Color(153, 153, 153));
        jLimite.setForeground(new java.awt.Color(0, 0, 0));
        jLimite.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLimite.setText("0");
        jLimite.setOpaque(true);

        jLBase.setBackground(new java.awt.Color(153, 153, 153));
        jLBase.setForeground(new java.awt.Color(0, 0, 0));
        jLBase.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLBase.setText("0");
        jLBase.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLimite, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLBase, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLPlanificador, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 8, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jLContadorPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLPlanificador, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel16)
                .addGap(14, 14, 14)
                .addComponent(jLContadorPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLimite, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLBase, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        jLabel14.setText("CPU");

        jLabel21.setText("Hora del sistema");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLHoraInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(250, 250, 250)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(txtProceso, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(txtTL, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(txtTC, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(118, 118, 118)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(90, 90, 90)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(910, 910, 910)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(910, 910, 910)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(282, 282, 282)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLHoraInicial))
                    .addComponent(jLabel1))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jLabel14)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel3))
                            .addComponent(txtProceso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel4))
                            .addComponent(txtTL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel5))
                            .addComponent(txtTC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(396, 396, 396)
                        .addComponent(jLabel12)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jLabel21)
                .addGap(14, 14, 14)
                .addComponent(jLabel7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //jTable1.addRow()
        Insertar();
        tabla.addRow(new Object[]{Proceso, TL, TC});
        limpiarReloj();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //listTL();
        listTC();
        Proceso pr = new Proceso();
        pr.setTiempo(np);
        //pr.setProceso(proc);
        pr.setTiempo(sumaT);
        for(int i=0; i<atributosProceso.length; i++){
            atributosProceso[i].setTiempo(listarTC()[i]);
        }
        if ((pr.getTiempo() <= 30)) {
            //this.listaProcesos.add(pr);
            //nuevaPosici√≥n=nuevaPosici√≥n-listaProcesos.get(proc).getTama√±oEnPix(); 
            //System.out.println("HORA DE INICIO: " + jLabel7.getText());
            jLHoraInicial.setText("Hora inicial del sistema: " + jLabel7.getText());
            roundrobin.start();
        } else {
            this.Error();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMain().setVisible(true);
            }
        });
    }
    // clase para la hora del sistema. ¬°No modificar!

    public class Reloj extends Thread {

        Calendar calendario;

        @Override
        public void run() {
            while (true) {
                String horaSistema = "";
                calendario = Calendar.getInstance();
                if (calendario.get(Calendar.HOUR_OF_DAY) < 10) {
                    horaSistema += String.valueOf("0" + calendario.get(Calendar.HOUR_OF_DAY)) + ":";
                } else {
                    horaSistema += String.valueOf(calendario.get(Calendar.HOUR_OF_DAY)) + ":";
                }
                if (calendario.get(Calendar.MINUTE) < 10) {
                    horaSistema += String.valueOf("0" + calendario.get(Calendar.MINUTE)) + ":";
                } else {
                    horaSistema += String.valueOf(calendario.get(Calendar.MINUTE)) + ":";
                }
                if (calendario.get(Calendar.SECOND) < 10) {
                    horaSistema += String.valueOf("0" + calendario.get(Calendar.SECOND)) + "hrs";
                } else {
                    horaSistema += String.valueOf(calendario.get(Calendar.SECOND)) + " hrs";
                }
                //horaSistema += String.valueOf(calendario.get(Calendar.MILLISECOND)) + " hrs";
                jLabel7.setText(horaSistema);
                try {
                    Thread.sleep(1);
                } catch (InterruptedException ex) {
                    Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
    
    
    public void insertarHistorial(String id, String Estado, String HL, String HF) {
        tablaCPU.addRow(new Object[]{id, Estado, HL, HF});
    }
    
    public class RR extends Thread {
        
        @Override
        public void run() {
            //Poner todas las entradas en 0
            String[] listaPlanifador = listProcesos();
            Integer[] listaTiempoEntrada = listTL();
            Integer[] listaTiempoProceso = listarTC();
            Boolean[] entradadeProceso = new Boolean[listaPlanifador.length];
            Boolean[] atendiendo = new Boolean[listaPlanifador.length];
            Boolean[] terminado = new Boolean[listaPlanifador.length];
            Integer numeroProcesos = listaPlanifador.length;
            Integer quantum = 4;
            Integer aux;
            Integer aux3 = 0;
            String aux2;
            //inicializar variable atributoProceso
            //Ordenar el orden de llegada 
            for (int i = 0; i < numeroProcesos; i++) {
                for (int j = 0; j < numeroProcesos - 1; j++) {
                    if (listaTiempoEntrada[j] > listaTiempoEntrada[j + 1]) {
                        //Ordenar Segundos de llegada
                        aux = listaTiempoEntrada[j + 1];
                        listaTiempoEntrada[j + 1] = listaTiempoEntrada[j];
                        listaTiempoEntrada[j] = aux;
                        //Ordenar Segundos de Proceso
                        aux = listaTiempoProceso[j + 1];
                        listaTiempoProceso[j + 1] = listaTiempoProceso[j];
                        listaTiempoProceso[j] = aux;
                        //Ordenar Proceso 
                        aux2 = listaPlanifador[j + 1];
                        listaPlanifador[j + 1] = listaPlanifador[j];
                        listaPlanifador[j] = aux2;
                    }
                }

            }
            //System.out.println("Nombre -  TL  -  TC ");
            System.out.println(atributosProceso.length);
            for (int i = 0; i < numeroProcesos; i++) {
                entradadeProceso[i] = false;
                atendiendo[i] = false;
                terminado[i] = false;
                /*System.out.println(listaPlanifador[i] + "       "
                        + listaTiempoEntrada[i] + "       " + listaTiempoProceso[i]);*/
            }
            aux = 0;
            while (true) {
//Control de entrada
                for (int i = 0; i < numeroProcesos; i++) {
                    if (listaTiempoEntrada[i] == 0 && entradadeProceso[i] != true) {
                        entradadeProceso[i] = true;
                        //System.out.println("El proceso: "+listaPlanifador[i]+" Esta listo para Ejecutarse");
                        //System.out.println("HORA DE LLEGADA DE " + listaPlanifador[i] + " " + jLabel7.getText());
                        insertarHistorial(listaPlanifador[i].toString(), "Listo", jLabel7.getText(), "");
                    } else {
                        if (listaTiempoEntrada[i] > 0) {
                            //System.out.println("El proceso: "+listaPlanifador[i]+" le faltan "+listaTiempoEntrada[i].toString()+" para Segundos estar listo");
                            listaTiempoEntrada[i] = listaTiempoEntrada[i] - 1;
                        }
                    }
                }

//Control de para antender 
                //Asigno a quien atender
                for (int i = aux; i < numeroProcesos; i++) {
                    if (entradadeProceso[i] == true && atendiendo[i] == false && quantum == 4 && listaTiempoProceso[i] > 0) {
                        aux3 = i;
                        atendiendo[i] = true;
                        //System.out.println("Toca atender a" + listaPlanifador[i] + " QUEDAN: " + listaTiempoProceso[i]);
                        jLPlanificador.setText(listaPlanifador[i]);
                        tablaCPU.setValueAt("Ejecutando", i, 1);
                        jLimite.setText(atributosProceso[i].getHexadecimal());
                        aux = i + 1;
                        break;
                    }
                }
                //Restauramos el quantum

                if (quantum == 0 || listaTiempoProceso[aux3] == 0) {
                    quantum = 4;
                    if (Objects.equals(aux, numeroProcesos)) {
                        aux = 0;
                    }
                    if(atendiendo[aux3]){
                     tablaCPU.setValueAt("Listo", aux3, 1);   
                     atendiendo[aux3] = false;
                    }
                    if (listaTiempoProceso[aux3] == 0 && terminado[aux3] == false) {
                        System.out.println("PROCESO " + listaPlanifador[aux3] + " TERMINADO HORA: " + jLabel7.getText());
                        tablaCPU.setValueAt(jLabel7.getText(), aux3, 3);
                        tablaCPU.setValueAt("Terminado", aux3, 1);
                        terminado[aux3] = true;
                    }
                } else if (entradadeProceso[aux3] == true && atendiendo[aux3] == true) {
                    //Atiende

                    quantum = quantum - 1;
                    //System.out.println("Al Proceso "+listaPlanifador[aux3]+" Le quedan "+listaTiempoProceso[aux3] +" Para terminar");
                    listaTiempoProceso[aux3] = listaTiempoProceso[aux3] - 1;
                    jLContadorPrograma.setText(listaTiempoProceso[aux3].toString());
                }

                try {
                    Thread.sleep(999);
                } catch (InterruptedException ex) {
                    Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLBase;
    private javax.swing.JLabel jLContadorPrograma;
    private javax.swing.JLabel jLHoraInicial;
    private javax.swing.JLabel jLPlanificador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLimite;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txtProceso;
    private javax.swing.JTextField txtTC;
    private javax.swing.JTextField txtTL;
    // End of variables declaration//GEN-END:variables
}
